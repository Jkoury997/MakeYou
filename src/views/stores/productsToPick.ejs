<!DOCTYPE html>
<html lang="es">
  <head>
    <%- include("../partials/head") %>
    <title>Dashboard</title>
  </head>

  <body>
    <%- include("../partials/sidebar") %>
    <main class="container-fluid">
      <section class="container-fluid mt-2">
        <h3>Tienda: <%= store %></h3>
        <div
          class="btn-group flex-wrap"
          role="group"
          aria-label="Basic radio toggle button group"
        >
          <label class="btn btn-outline-primary"
            ><i class="bi bi-funnel-fill"></i
          ></label>
          <% rubros.forEach((rubroUnico)=> { %>
          <input
            type="radio"
            class="btn-check"
            name="rubro"
            id="<%= rubroUnico %>"
            autocomplete="off"
          />
          <label class="btn btn-outline-primary" for="<%= rubroUnico %>">
            <%= rubroUnico %>
          </label>
          <% }); %>
        </div>

        <div class="input-group mt-3 mb-3">
          <span class="input-group-text"><i class="bi bi-upc-scan"></i></span>
          <div class="form-floating is-invalid">
            <input
              type="text"
              class="form-control"
              id="barcodeScan"
              placeholder="Codigo de barras"
            />
            <label for="barcodeScan">Codigo de barras</label>
          </div>
          <span class="input-group-text"
            ><button><i class="bi bi-upc-scan"></i></button
          ></span>
        </div>
      </section>

      <section class="container-fluid mt-3">
        <table class="table table-hover">
          <thead>
            <tr>
              <th scope="col">Artículo</th>
              <th scope="col">Talle</th>
              <th scope="col">Color</th>
              <th scope="col">Stock</th>
              <th scope="col">Preparar</th>
              <th scope="col">Scan</th>
              <th scope="col"><i class="bi bi-list-check"></i></th>
            </tr>
          </thead>
          <tbody>
            <% products.forEach((product)=> { %>
            <tr
              data-rubro="<%= product.Rubro %>"
              data-product="<%= product.CodigoBarras %>"
            >
              <td class="align-middle"><%= product.Cabecera %></td>
              <td class="align-middle"><%= product.DescripMedida %></td>
              <td class="align-middle"><%= product.DescripDetalle %></td>
              <td class="align-middle"><%= product.Stock %></td>
              <td class="align-middle"><%= product.Saldo %></td>
              <td class="align-middle">0</td>
              <td class="align-middle">
                <i
                  class="bi bi-circle"
                  id="icono-<%= product.IdArticulo %>"
                ></i>
                <!-- Icono inicial -->
              </td>
            </tr>
            <% }); %>
          </tbody>
        </table>
      </section>
      <!-- Modal -->
      <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <h1 class="modal-title fs-5" id="staticBackdropLabel"></h1><i class="bi bi-exclamation-circle ms-2 "></i>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
              <p id="textModal"></p>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-primary btn-pink">Entendido</button>
            </div>
          </div>
        </div>
      </div>
    </main>

    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const rubroInputs = document.querySelectorAll('input[name="rubro"]');
        const productRows = document.querySelectorAll("tbody tr");
        const barcodeInput = document.getElementById("barcodeScan");
        // Obtener el modal
        var myModal = new bootstrap.Modal(document.getElementById('staticBackdrop'));

        // Filtrado por rubro
        rubroInputs.forEach((input) => {
          input.addEventListener("change", function () {
            const selectedRubro = this.id;
            productRows.forEach((row) => {
              if (
                selectedRubro === "Todos" ||
                row.getAttribute("data-rubro") === selectedRubro
              ) {
                row.style.display = "";
              } else {
                row.style.display = "none";
              }
            });
          });
        });

        // Manejo del escaneo de códigos de barras
        barcodeInput.addEventListener("input", function () {
          const barcode = this.value;
          productRows.forEach((row) => {
            const productBarcode = row.getAttribute("data-product");
            if (productBarcode === barcode) {
              const scanCell = row.querySelector("td:nth-child(6)");
              let scanValue = parseInt(scanCell.textContent) || 0;
              scanValue++;
              scanCell.textContent = scanValue;

              const prepareValue = parseInt(
                row.querySelector("td:nth-child(5)").textContent
              );
              const iconElement = row.querySelector("i");

              if (scanValue === prepareValue * -1) {
                console.log("Producto completo: " + productBarcode);
                iconElement.className = "bi bi-check-circle"; // Icono de completado
                row.classList.add("table-success"); // Pinta la fila de verde
                row.classList.remove("table-warning");
              } else if (scanValue > prepareValue * -1) {
                console.log("Producto de mas: " + productBarcode);
                 // Obtener los valores de las celdas
                let cabecera = row.cells[0].textContent; // Nombre del artículo
                let descripMedida = row.cells[1].textContent; // Descripción de la medida
                let descripDetalle = row.cells[2].textContent; // Descripción del detalle
                iconElement.className = "bi bi-x-circle"; // Icono de en proceso
                row.classList.add("table-danger"); // Pinta la fila de rojo
                row.classList.remove("table-success");
                // Mostrar el modal si scanValue es mayor que prepareValue
                const staticBackdropLabel = document.getElementById("staticBackdropLabel")
                const textModal = document.getElementById("textModal")
                staticBackdropLabel.textContent = "Advertencia"
                textModal.textContent = "Escaneaste un " + cabecera +" "+ descripMedida +" "+ descripDetalle + " de mas"
               
                scanValue = scanValue - 1
                scanCell.textContent = scanValue;
                myModal.show();
              } else if (scanValue > 0) {
                console.log("Producto en proceso: " + productBarcode);
                iconElement.className = "bi bi-arrow-repeat"; // Icono de en proceso
                row.classList.add("table-warning"); // Pinta la fila de amarillo
              }
              barcodeScan.value = "";
            }
          });
        });
      });
    </script>
  </body>
</html>
